// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pcol.proto

package pcol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Test struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d5e4618b2e5f5d1, []int{0}
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Test) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type TestReceipt struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReceipt) Reset()         { *m = TestReceipt{} }
func (m *TestReceipt) String() string { return proto.CompactTextString(m) }
func (*TestReceipt) ProtoMessage()    {}
func (*TestReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d5e4618b2e5f5d1, []int{1}
}

func (m *TestReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReceipt.Unmarshal(m, b)
}
func (m *TestReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReceipt.Marshal(b, m, deterministic)
}
func (m *TestReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReceipt.Merge(m, src)
}
func (m *TestReceipt) XXX_Size() int {
	return xxx_messageInfo_TestReceipt.Size(m)
}
func (m *TestReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TestReceipt proto.InternalMessageInfo

func (m *TestReceipt) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *TestReceipt) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*Test)(nil), "pcol.Test")
	proto.RegisterType((*TestReceipt)(nil), "pcol.TestReceipt")
}

func init() { proto.RegisterFile("pcol.proto", fileDescriptor_1d5e4618b2e5f5d1) }

var fileDescriptor_1d5e4618b2e5f5d1 = []byte{
	// 126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x48, 0xce, 0xcf,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x74, 0xb8, 0x58, 0x42, 0x52,
	0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38,
	0x83, 0xc0, 0x6c, 0x21, 0x01, 0x2e, 0xe6, 0xc4, 0xf4, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6,
	0x20, 0x10, 0x53, 0xc9, 0x98, 0x8b, 0x1b, 0xa4, 0x3a, 0x28, 0x35, 0x39, 0x35, 0xb3, 0xa0, 0x44,
	0x88, 0x8f, 0x8b, 0x29, 0x3f, 0x1b, 0xac, 0x85, 0x23, 0x88, 0x29, 0x3f, 0x5b, 0x48, 0x84, 0x8b,
	0x35, 0xb5, 0xa8, 0x28, 0xbf, 0x08, 0xac, 0x85, 0x33, 0x08, 0xc2, 0x49, 0x62, 0x03, 0xdb, 0x67,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x24, 0xdd, 0xf2, 0xe4, 0x7d, 0x00, 0x00, 0x00,
}
